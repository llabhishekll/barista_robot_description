<?xml version="1.0" encoding="UTF-8"?>

<robot name="barista_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- XACRO PROPERTY -->
    <xacro:property name="robot_name" value="$(arg robot_name)" />

    <!-- XACRO ARGS -->
    <xacro:arg name="namespace" default="" />
    <xacro:arg name="include_laser" default="true" />
    <xacro:arg name="include_joint_state" default="true" />
    <xacro:arg name="inverse" default="false" />

    <!-- XACRO FILES -->
    <xacro:include filename="base.xacro" />
    <xacro:include filename="wheel.xacro" />
    <xacro:include filename="standoff.xacro" />
    <xacro:include filename="cup_holder_tray.xacro" />
    <xacro:include filename="laser.xacro" />

    <!-- LINKS  -->

    <!-- parent -->
    <link name="base_footprint">
    </link>

    <!-- base -->
    <xacro:base name="base_link" length="0.155" radius="0.178" mass="10" />

    <!-- right wheel -->
    <xacro:wheel name="right_wheel" length="0.0206" radius="0.0352" mass="1" />

    <!-- left wheel -->
    <xacro:wheel name="left_wheel" length="0.0206" radius="0.0352" mass="1" />

    <!-- front caster -->
    <xacro:caster name="front_caster" radius="0.0352" mass="1" />

    <!-- back caster -->
    <xacro:caster name="back_caster" radius="0.0352" mass="1" />

    <!-- front right standoff -->
    <xacro:standoff name="fr_standoff" length="0.220" radius="0.010" mass="1" />

    <!-- front left standoff -->
    <xacro:standoff name="fl_standoff" length="0.220" radius="0.010" mass="1" />

    <!-- back right standoff -->
    <xacro:standoff name="br_standoff" length="0.220" radius="0.010" mass="1" />

    <!-- back left standoff -->
    <xacro:standoff name="bl_standoff" length="0.220" radius="0.010" mass="1" />

    <!-- cup holder -->
    <xacro:cup_holder_tray name="cup_holder" length="0.090" radius="0.160" mass="7" />

    <!-- base laser -->
    <xacro:if value="$(arg include_laser)">
        <xacro:laser name="base_laser" length="0.022" radius="0.022" />
    </xacro:if>

    <!-- JOINTS -->

    <!-- base_footprint to base_link joint -->
    <joint name="joint_parent_to_base" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 0.0775" rpy="0 0 0" />
    </joint>

    <!-- base_link to right_wheel joint -->
    <joint name="joint_base_to_right_wheel" type="continuous">
        <parent link="base_link" />
        <child link="right_wheel" />
        <origin xyz="0 -0.15 -0.0775" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <!-- base_link to left_wheel joint -->
    <joint name="joint_base_to_left_wheel" type="continuous">
        <parent link="base_link" />
        <child link="left_wheel" />
        <origin xyz="0 0.15 -0.0775" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <!-- base_link to front_caster joint -->
    <joint name="joint_base_to_front_caster" type="fixed">
        <parent link="base_link" />
        <child link="front_caster" />
        <origin xyz="0.12 0 -0.0775" rpy="0 0 0" />
    </joint>

    <!-- base_link to back_caster joint -->
    <joint name="joint_base_to_back_caster" type="fixed">
        <parent link="base_link" />
        <child link="back_caster" />
        <origin xyz="-0.12 0 -0.0775" rpy="0 0 0" />
    </joint>

    <!-- base_link to fr_standoff joint -->
    <joint name="joint_base_to_fr_standoff" type="fixed">
        <parent link="base_link" />
        <child link="fr_standoff" />
        <origin xyz="0.04 -0.12 0.1875" rpy="0 0 0" />
    </joint>

    <!-- base_link to fl_standoff joint -->
    <joint name="joint_base_to_fl_standoff" type="fixed">
        <parent link="base_link" />
        <child link="fl_standoff" />
        <origin xyz="0.04 0.12 0.1875" rpy="0 0 0" />
    </joint>

    <!-- base_link to br_standoff joint -->
    <joint name="joint_base_to_br_standoff" type="fixed">
        <parent link="base_link" />
        <child link="br_standoff" />
        <origin xyz="-0.04 -0.12 0.1875" rpy="0 0 0" />
    </joint>

    <!-- base_link to bl_standoff joint -->
    <joint name="joint_base_to_bl_standoff" type="fixed">
        <parent link="base_link" />
        <child link="bl_standoff" />
        <origin xyz="-0.04 0.12 0.1875" rpy="0 0 0" />
    </joint>

    <!-- fr_standoff to cup_holder joint -->
    <joint name="joint_fr_standoff_to_cup_holder" type="fixed">
        <parent link="fr_standoff" />
        <child link="cup_holder" />
        <origin xyz="-0.04 0.12 0.155" rpy="0 0 0" />
    </joint>

    <!-- base_link to base_laser joint -->
    <xacro:if value="$(arg include_laser)">
        <joint name="joint_base_to_base_laser" type="fixed">
            <parent link="base_link" />
            <child link="base_laser" />
            <origin xyz="0 0 0.0885" rpy="0 0 0" />
        </joint>
    </xacro:if>

    <!-- GAZEBO -->

    <!-- properties for base_link -->
    <xacro:if value="$(arg inverse)">
        <gazebo reference="base_link">
            <material>Gazebo/Red </material>
        </gazebo>
    </xacro:if>
    <xacro:unless value="$(arg inverse)">
        <gazebo reference="base_link">
            <material>Gazebo/Blue </material>
        </gazebo>
    </xacro:unless>

    <!-- properties for right_wheel -->
    <gazebo reference="right_wheel">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for left_wheel -->
    <gazebo reference="left_wheel">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for front_caster -->
    <gazebo reference="front_caster">
        <preserveFixedJoint>true</preserveFixedJoint>
        <mu1>0</mu1>
        <mu2>0</mu2>
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for back_caster -->
    <gazebo reference="back_caster">
        <preserveFixedJoint>true</preserveFixedJoint>
        <mu1>0</mu1>
        <mu2>0</mu2>
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for fr_standoff -->
    <gazebo reference="fr_standoff">
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for fl_standoff -->
    <gazebo reference="fl_standoff">
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for br_standoff -->
    <gazebo reference="br_standoff">
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for bl_standoff -->
    <gazebo reference="bl_standoff">
        <material>Gazebo/White </material>
    </gazebo>

    <!-- properties for cup_holder -->
    <xacro:if value="$(arg inverse)">
        <gazebo reference="cup_holder">
            <material>Gazebo/Red </material>
        </gazebo>
    </xacro:if>
    <xacro:unless value="$(arg inverse)">
        <gazebo reference="cup_holder">
            <material>Gazebo/Blue </material>
        </gazebo>
    </xacro:unless>

    <!-- properties for base_laser -->
    <xacro:if value="$(arg include_laser)">
        <gazebo reference="base_laser">
            <material>Gazebo/Yellow </material>
        </gazebo>
    </xacro:if>

    <!-- plugin for robot control -->
    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
            <!-- defined parameters -->
            <left_joint>joint_base_to_right_wheel</left_joint>
            <right_joint>joint_base_to_left_wheel</right_joint>
            <wheel_separation>0.30</wheel_separation>
            <wheel_diameter>0.0704</wheel_diameter>
            <!-- default parameters -->
            <max_wheel_torque>1.0</max_wheel_torque>
            <max_wheel_acceleration>2.0</max_wheel_acceleration>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <!-- launch parameters -->
            <robot_base_frame>$(arg namespace)/base_footprint</robot_base_frame>
            <odometry_frame>$(arg namespace)/odom</odometry_frame>
            <ros>
                <namespace>$(arg namespace)</namespace>
                <argument>/cmd_vel:=/cmd_vel</argument>
                <argument>/odom:=/odom</argument>
            </ros>
        </plugin>
    </gazebo>

    <!-- plugin for laser sensor -->
    <xacro:if value="$(arg include_laser)">
        <gazebo reference="base_laser">
            <sensor type="ray" name="head_hokuyo_sensor">
                <pose>0 0 0 0 0 0</pose>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>720</samples>
                            <resolution>1.0</resolution>
                            <min_angle>-3.14</min_angle>
                            <max_angle>3.14</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.2</min>
                        <max>3.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>100.0</update_rate>
                <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
                    <!-- defined parameters -->
                    <ros>
                        <namespace>$(arg namespace)</namespace>
                        <remapping>~/out:=scan</remapping>
                    </ros>
                    <frame_name>$(arg namespace)/base_laser</frame_name>
                    <!-- default parameters -->
                    <output_type>sensor_msgs/LaserScan</output_type>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:if>

    <!-- plugin for joint state publisher -->
    <xacro:if value="$(arg include_joint_state)">
        <gazebo>
            <plugin name="barista_robot_joint_state"
                filename="libgazebo_ros_joint_state_publisher.so">
                <!-- defined parameters -->
                <update_rate>30</update_rate>
                <joint_name>joint_base_to_right_wheel</joint_name>
                <joint_name>joint_base_to_left_wheel</joint_name>
                <ros>
                    <namespace>$(arg namespace)</namespace>
                    <remapping>~/out:=/joint_states</remapping>
                </ros>
            </plugin>
        </gazebo>
    </xacro:if>

</robot>